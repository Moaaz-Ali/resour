#!/bin/sh
#
# 
# MySQL
#
# Description:	Manages a MySQL database as Linux-HA resource

#
# Author:	Alan Robertson 		: DB2 Script
# Author:	Jakub Janczak  		: Rewrite as MySQL
# Author:	Andrew Beekhof 		: Cleanup and import
# Author:	Sebastian Reitenbach    : add OpenBSD defaults, more cleanup
# Author:  Narayan Newton      : Add Gentoo/Debian defaults
# Author:	Marian Marinov		: Add replication capabilities
#
# Support:	linux-ha@lists.linux-ha.org
# License:	GNU General Public License (GPL)
# Copyright:	(C) 2002 - 2005 International Business Machines, Inc.
#
# An example usage in /etc/ha.d/haresources: 
#       node1  10.0.0.170 mysql
#
# See usage() function below for more details...
#
# OCF instance parameters:
#   OCF_RESKEY_binary
#   OCF_RESKEY_config
#   OCF_RESKEY_datadir
#   OCF_RESKEY_user
#   OCF_RESKEY_group
#   OCF_RESKEY_test_table
#   OCF_RESKEY_test_user
#   OCF_RESKEY_test_passwd
#   OCF_RESKEY_enable_creation
#   OCF_RESKEY_additional_parameters
#   OCF_RESKEY_log
#   OCF_RESKEY_pid
#   OCF_RESKEY_socket
#   OCF_RESKEY_replication_user
#   OCF_RESKEY_replication_passwd
#######################################################################
# Initialization:

: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/resource.d/heartbeat}
. ${OCF_FUNCTIONS_DIR}/.ocf-shellfuncs
VERSION=0.18

#######################################################################

# Fill in some defaults if no values are specified
HOSTOS=`uname`
HOSTNAME=`hostname`

if [ "X${HOSTOS}" = "XOpenBSD" ];then
OCF_RESKEY_binary_default="/usr/local/bin/mysqld_safe"
OCF_RESKEY_config_default="/etc/my.cnf"
OCF_RESKEY_datadir_default="/var/mysql"
OCF_RESKEY_user_default="_mysql"
OCF_RESKEY_group_default="_mysql"
OCF_RESKEY_log_default="/var/log/mysqld.log"
OCF_RESKEY_pid_default="/var/mysql/mysqld.pid"
OCF_RESKEY_socket_default="/var/run/mysql/mysql.sock"
OCF_RESKEY_additional_parameters_default=""
else
OCF_RESKEY_binary_default="/usr/bin/safe_mysqld"
OCF_RESKEY_config_default="/etc/my.cnf"
OCF_RESKEY_datadir_default="/var/lib/mysql"
OCF_RESKEY_user_default="mysql"
OCF_RESKEY_group_default="mysql"
OCF_RESKEY_log_default="/var/log/mysqld.log"
OCF_RESKEY_pid_default="/var/run/mysql/mysqld.pid"
OCF_RESKEY_socket_default="/var/lib/mysql/mysql.sock"
OCF_RESKEY_additional_parameters_default=""
fi
OCF_RESKEY_enable_creation_default=0
OCF_RESKEY_test_user_default="root"
OCF_RESKEY_test_table_default="mysql.user"
OCF_RESKEY_test_passwd_default=""
OCF_RESKEY_replication_user_default=""
OCF_RESKEY_replication_passwd_default=""

: ${OCF_RESKEY_binary=${OCF_RESKEY_binary_default}}
MYSQL_BINDIR=`dirname ${OCF_RESKEY_binary}`

: ${OCF_RESKEY_config=${OCF_RESKEY_config_default}}
: ${OCF_RESKEY_datadir=${OCF_RESKEY_datadir_default}}

: ${OCF_RESKEY_user=${OCF_RESKEY_user_default}}
: ${OCF_RESKEY_group=${OCF_RESKEY_group_default}}

: ${OCF_RESKEY_log=${OCF_RESKEY_log_default}}
: ${OCF_RESKEY_pid=${OCF_RESKEY_pid_default}}
: ${OCF_RESKEY_socket=${OCF_RESKEY_socket_default}}

: ${OCF_RESKEY_test_user=${OCF_RESKEY_test_user_default}}
: ${OCF_RESKEY_test_table=${OCF_RESKEY_test_table_default}}
: ${OCF_RESKEY_test_passwd=${OCF_RESKEY_test_passwd_default}}

: ${OCF_RESKEY_enable_creation=${OCF_RESKEY_enable_creation_default}}
: ${OCF_RESKEY_additional_parameters=${OCF_RESKEY_additional_parameters_default}}

: ${OCF_RESKEY_replication_user=${OCF_RESKEY_replication_user_default}}
: ${OCF_RESKEY_replication_passwd=${OCF_RESKEY_replication_passwd_default}}

usage() {
  cat <<UEND
	usage: $0 (start|stop|validate-all|meta-data|monitor|notify|promote|demote)

	$0 manages a MySQL Database as an HA resource.

	The 'start' operation starts the database.
	The 'stop' operation stops the database.
	The 'status' operation reports whether the database is running
	The 'monitor' operation reports whether the database seems to be working
	The 'promote' operation makes this mysql server run as master
	The 'demote' operation makes this mysql server run as slave
	The 'notify' operation is used for post execution
	The 'validate-all' operation reports whether the parameters are valid

UEND
}

meta_data() {
	cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="mysql">
<version>1.1</version>

<longdesc lang="en">
Resource script for MySQL. 
It manages a MySQL Database instance as an HA resource.
</longdesc>
<shortdesc lang="en">Manages a MySQL database instance</shortdesc>

<parameters>

<parameter name="binary" unique="0" required="0">
<longdesc lang="en">
Location of the MySQL binary
</longdesc>
<shortdesc lang="en">MySQL binary</shortdesc>
<content type="string" default="${OCF_RESKEY_binary_default}" />
</parameter>

<parameter name="config" unique="0" required="0">
<longdesc lang="en">
Configuration file
</longdesc>
<shortdesc lang="en">MySQL config</shortdesc>
<content type="string" default="${OCF_RESKEY_config_default}" />
</parameter>

<parameter name="datadir" unique="0" required="0">
<longdesc lang="en">
Directory containing databases
</longdesc>
<shortdesc lang="en">MySQL datadir</shortdesc>
<content type="string" default="${OCF_RESKEY_datadir_default}" />
</parameter>

<parameter name="user" unique="0" required="0">
<longdesc lang="en">
User running MySQL daemon
</longdesc>
<shortdesc lang="en">MySQL user</shortdesc>
<content type="string" default="${OCF_RESKEY_user_default}" />
</parameter>

<parameter name="group" unique="0" required="0">
<longdesc lang="en">
Group running MySQL daemon (for logfile and directory permissions)
</longdesc>
<shortdesc lang="en">MySQL group</shortdesc>
<content type="string" default="${OCF_RESKEY_group_default}"/>
</parameter>

<parameter name="log" unique="0" required="0">
<longdesc lang="en">
The logfile to be used for mysqld.
</longdesc>
<shortdesc lang="en">MySQL log file</shortdesc>
<content type="string" default="${OCF_RESKEY_log_default}"/>
</parameter>

<parameter name="pid" unique="0" required="0">
<longdesc lang="en">
The pidfile to be used for mysqld.
</longdesc>
<shortdesc lang="en">MySQL pid file</shortdesc>
<content type="string" default="${OCF_RESKEY_pid_default}"/>
</parameter>

<parameter name="socket" unique="0" required="0">
<longdesc lang="en">
The socket to be used for mysqld.
</longdesc>
<shortdesc lang="en">MySQL socket</shortdesc>
<content type="string" default="${OCF_RESKEY_socket_default}"/>
</parameter>

<parameter name="test_table" unique="0" required="0">
<longdesc lang="en">
Table to be tested in monitor statement (in database.table notation)
</longdesc>
<shortdesc lang="en">MySQL test table</shortdesc>
<content type="string" default="${OCF_RESKEY_test_table_default}" />
</parameter>

<parameter name="test_user" unique="0" required="0">
<longdesc lang="en">
MySQL test user
</longdesc>
<shortdesc lang="en">MySQL test user</shortdesc>
<content type="string" default="${OCF_RESKEY_test_user_default}" />
</parameter>

<parameter name="test_passwd" unique="0" required="0">
<longdesc lang="en">
MySQL test user password
</longdesc>
<shortdesc lang="en">MySQL test user password</shortdesc>
<content type="string" default="${OCF_RESKEY_test_passwd_default}" />
</parameter>

<parameter name="enable_creation" unique="0" required="0">
<longdesc lang="en">
If the MySQL database does not exist, it will be created 
</longdesc>
<shortdesc lang="en">Create the database if it does not exist</shortdesc>
<content type="integer" default="${OCF_RESKEY_enable_creation_default}"/>
</parameter>

<parameter name="additional_parameters" unique="0" required="0">
<longdesc lang="en">
Additional parameters which are passed to the mysqld on startup. 
(e.g. --skip-external-locking or --skip-grant-tables)
</longdesc>
<shortdesc lang="en">Additional parameters to pass to mysqld</shortdesc>
<content type="string" default="${OCF_RESKEY_additional_parameters_default}"/>
</parameter>

<parameter name="replication_user" unique="0" required="0">
<longdesc lang="en">
MySQL replication user. Used for replication client and slave.
</longdesc>
<shortdesc lang="en">MySQL replication user</shortdesc>
<content type="string" default="${OCF_RESKEY_replication_user_default}" />
</parameter>

<parameter name="replication_passwd" unique="0" required="0">
<longdesc lang="en">
MySQL replication password. Used for replication client and slave.
</longdesc>
<shortdesc lang="en">MySQL replication user password</shortdesc>
<content type="string" default="${OCF_RESKEY_replication_passwd_default}" />
</parameter>

</parameters>

<actions>
<action name="start" timeout="120" />
<action name="stop" timeout="120" />
<action name="status" timeout="60" />
<action name="monitor" depth="0" timeout="30" interval="10" />
<action name="monitor" depth="0"  timeout="20" interval="20" start-delay="0" role="Slave" />
<action name="monitor" depth="0"  timeout="20" interval="10" start-delay="0" role="Master" />
<action name="notify" timeout="90" />
<action name="promote" timeout="120" />
<action name="demote" timeout="120" />
<action name="validate-all" timeout="5" />
<action name="meta-data" timeout="5" />
</actions>
</resource-agent>
END
}

mysql_validate() {
# checking the parameters
    if [ ! -x $OCF_RESKEY_binary ]; then
	ocf_log err "mysqld binary $OCF_RESKEY_binary does not exist or is not executable";
	return $OCF_ERR_INSTALLED;
    fi

    if [ ! -f $OCF_RESKEY_config ]; then
	ocf_log err "Config $OCF_RESKEY_config doesn't exist";
	return $OCF_ERR_CONFIGURED;
    fi
    
    if [ ! -d $OCF_RESKEY_datadir ]; then
	ocf_log err "Datadir $OCF_RESKEY_datadir doesn't exist";
	return $OCF_ERR_CONFIGURED;
    fi
    
    getent passwd $OCF_RESKEY_user >/dev/null 2>&1
    if [ ! $? -eq 0 ]; then
	ocf_log err "User $OCF_RESKEY_user doesn't exit";
	return $OCF_ERR_INSTALLED;
    fi
    
    getent group $OCF_RESKEY_group >/dev/null 2>&1
    if [ ! $? -eq 0 ]; then
	ocf_log err "Group $OCF_RESKEY_group doesn't exist";
	return $OCF_ERR_INSTALLED;
    fi

	if [ ! -z "${OCF_RESKEY_CRM_meta_master_max}" ] && [ "${OCF_RESKEY_CRM_meta_master_max}" > 0 ]; then
    	if [ -z "$OCF_RESKEY_replication_user" ] || [ -z "$OCF_RESKEY_replication_passwd" ]; then
			ocf_log err "Missing replication username or password"
			exit $OCF_ERR_CONFIGURED
    	fi
    fi
    true
}

is_slave() {
	slave_info=($(mysql \
		--user=$OCF_RESKEY_replication_user \
		--password=$OCF_RESKEY_replication_passwd \
		--socket=$OCF_RESKEY_socket -O connect_timeout=1 \
		-e 'SHOW SLAVE STATUS\G'|awk '/Running/ || /Master_[UHP]/{print $2}'))

	if [ "$?" != 0 ]; then
		ocf_log err "Unable to get local slave status"
		return 1
	fi

	if [ -z "${slave_info[*]}" ]; then
		# no slave configuration, can not be slave
		return 1;
	fi

	if [ -z "${slave_info[3]}" ] || [ -z "${slave_info[4]}" ] || [ -z "${slave_info[0]}" ] || [ -z "${slave_info[0]}" ]; then
		ocf_log err "Unable to get slave status"
		return 1
	fi

	if [ $# == 1 ]; then
		if [ "${slave_info[3]}" == 'Yes' ] &&
			[ "${slave_info[4]}" == 'Yes' ] &&
			[ "${slave_info[1]}" == "$OCF_RESKEY_replication_user" ] &&
			( grep "${slave_info[0]}" /etc/hosts > /dev/null ); then
			# machine is slave
			return 0;
		fi
	else
		if [ "${slave_info[3]}" == 'Yes' ] || [ "${slave_info[4]}" == 'Yes' ]; then
			if [ "${slave_info[1]}" == "$OCF_RESKEY_replication_user" ] && ( grep "${slave_info[0]}" /etc/hosts > /dev/null ); then
				# machine is slave
				return 0;
			fi
		fi
	fi

	# machine is not slave
	return 1;
}

mysql_status() {
	if [ ! -e $OCF_RESKEY_pid ]; then
		ocf_log debug "MySQL is not running"
		return $OCF_NOT_RUNNING;
	fi
	
	pid=`cat $OCF_RESKEY_pid`;
	if [ -d /proc -a -d /proc/1 ]; then
		[ "u$pid" != "u" -a -d /proc/$pid ]
	else
		kill -0 $pid >/dev/null 2>&1
	fi

	if [ $? -eq 0 ]; then
		return $OCF_SUCCESS;
	else	
		ocf_log debug "MySQL not running: removing old PID file"
		rm -f $OCF_RESKEY_pid
		return $OCF_NOT_RUNNING;
	fi
}

mysql_monitor() {
    mysql_status
    rc=$?

	if ! is_slave; then
		# if the check came from probe
		if [ "$OCF_RESKEY_CRM_meta_interval" = "0" ]; then
			return $OCF_RUNNING_MASTER;
		fi
		# if the check requires a master/slave status and this is the Master node
		if [ "$OCF_RESKEY_CRM_meta_role" == "Master" ]; then
			return $OCF_RUNNING_MASTER
		fi
	fi

	if [ $OCF_CHECK_LEVEL == 0 ]; then
	return $rc
    fi

	if [ ! -z "${OCF_RESKEY_CRM_meta_master_max}" ] &&
		[ "${OCF_RESKEY_CRM_meta_master_max}" > 0 ] &&
		[ "$OCF_RESKEY_CRM_meta_role" == "Slave" ] &&
		is_slave 1; then
		return $OCF_SUCCESS
	fi

    # Do a detailed status check
    buf=$(mysql --user=$OCF_RESKEY_test_user \
		--password=$OCF_RESKEY_test_passwd \
		--socket=$OCF_RESKEY_socket \
		-O connect_timeout=1 \
		-e "SELECT * FROM $OCF_RESKEY_test_table" 2>&1)
    rc=$?

    if [ $rc -ne 0 ]; then
	ocf_log err "MySQL $test_table monitor failed:";
	if [ ! -z "$buf" ]; then ocf_log err $buf; fi
	return $OCF_ERR_GENERIC;
    else
	ocf_log info "MySQL monitor succeeded";
	return $OCF_SUCCESS;
    fi
}

mysql_start() {
	mysql_validate
    mysql_status
    touch $OCF_RESKEY_log
    chown $OCF_RESKEY_user:$OCF_RESKEY_group $OCF_RESKEY_log
    chmod 0640 $OCF_RESKEY_log
    [ -x /sbin/restorecon ] && /sbin/restorecon $OCF_RESKEY_log
    
    if [ "$OCF_RESKEY_enable_creation" = 1 -a ! -d $OCF_RESKEY_datadir/mysql ] ; then	
        ocf_log info "Initializing MySQL database: " 
	$MYSQL_BINDIR/mysql_install_db --datadir=$OCF_RESKEY_datadir
        rc=$?
        if [ $rc -ne 0 ] ; then
	    ocf_log err "Initialization failed: $rc";
            exit $OCF_ERR_GENERIC
        fi
        chown -R $OCF_RESKEY_user:$OCF_RESKEY_group $OCF_RESKEY_datadir
    fi

    pid_dir=`dirname $OCF_RESKEY_pid`
    if ! su -s /bin/sh - $OCF_RESKEY_user -c "test -w $pid_dir"; then
	ocf_log err "Directory $pid_dir for pidfile $OCF_RESKEY_pid is not writable by $OCF_RESKEY_user"
	return $OCF_ERR_PERM;
    fi
    if [ ! -d $pid_dir ] ; then
	ocf_log info "Creating PID dir: $pid_dir"
	mkdir -p $pid_dir
	chown $OCF_RESKEY_user:$OCF_RESKEY_group $pid_dir
    fi

    socket_dir=`dirname $OCF_RESKEY_socket`
    if [ ! -d $socket_dir ] ; then
	ocf_log info "Creating socket dir: $socket_dir"
	mkdir -p $socket_dir
	chown $OCF_RESKEY_user:$OCF_RESKEY_group $socket_dir
    fi

    # Uncomment to perform permission clensing
    # - not convinced this should be enabled by default
    #
    #chmod 0755 $OCF_RESKEY_datadir
    #chown -R $OCF_RESKEY_user $OCF_RESKEY_datadir
    #chgrp -R $OCF_RESKEY_group $OCF_RESKEY_datadir

    ${OCF_RESKEY_binary} --defaults-file=$OCF_RESKEY_config \
		--pid-file=$OCF_RESKEY_pid \
		--socket=$OCF_RESKEY_socket \
		--datadir=$OCF_RESKEY_datadir \
		--user=$OCF_RESKEY_user $OCF_RESKEY_additional_parameters >/dev/null 2>&1 &
    rc=$?
    
    if [ $rc != 0 ]; then
	ocf_log err "MySQL start command failed: $rc"
  	return $rc
    fi
    
    # Spin waiting for the server to come up.
    # Let the CRM/LRM time us out if required
    start_wait=1
    while [ $start_wait = 1 ]; do
	mysql_status
	rc=$?
	if [ $rc = $OCF_SUCCESS ]; then
	    start_wait=0

	elif [ $rc != $OCF_NOT_RUNNING ]; then
	    ocf_log info "MySQL start failed: $rc"
	    return $rc
	fi
        sleep 2
    done
    
    ocf_log info "MySQL started"
    return $OCF_SUCCESS
}

mysql_stop() {
	mysql_validate
    if [ ! -f $OCF_RESKEY_pid ]; then
	ocf_log info "MySQL is not running"
        return $OCF_SUCCESS
    fi

    pid=`cat $OCF_RESKEY_pid 2> /dev/null `
    /bin/kill $pid > /dev/null 
    rc=$?
    if [ $rc != 0 ]; then
        ocf_log err "MySQL couldn't be stopped"
	return $OCF_ERR_GENERIC
    fi

	stop_wait=1
	while [ $stop_wait = 1 ]; do
		mysql_status
		rc=$?
		if [ $rc = $OCF_NOT_RUNNING ]; then
			stop_wait=0
		fi
		sleep 1
	done

    ocf_log info "MySQL stopped";
    rm -f /var/lock/subsys/mysqld
    rm -f $OCF_RESKEY_socket
    return $OCF_SUCCESS
}

mysql_promote() {
	if ( ! mysql_status ); then
		return $OCF_NOT_RUNNING
	fi
	if [ "$OCF_RESKEY_CRM_meta_notify_promote_uname" != "$HOSTNAME " ]; then
		return $OCF_ERR_GENERIC
	fi
	if is_slave; then
		mysql --socket=$OCF_RESKEY_socket -O connect_timeout=1 -e 'STOP SLAVE'
	fi
	return $OCF_SUCCESS
}

mysql_demote() {
	search_uname=''
	if [[ "$OCF_RESKEY_CRM_meta_notify_master_uname" =~ "^\s*$" ]] &&
		[[ "$OCF_RESKEY_CRM_meta_notify_promote_uname" =~ "^\s*$" ]]; then
		echo "No master or promote uname found" >> /tmp/replica.log
		return $OCF_ERR_GENERIC
	fi
	if [ "$OCF_RESKEY_CRM_meta_notify_promote_uname" == "$HOSTNAME " ]; then
		echo "Should not connect to my self(promote)" >> /tmp/replica.log
		return $OCF_ERR_GENERIC
	else
		search_uname=$OCF_RESKEY_CRM_meta_notify_promote_uname
	fi
	if [ "$OCF_RESKEY_CRM_meta_notify_master_uname" == "$HOSTNAME " ]; then
		echo "Should not connect to my self(master)" >> /tmp/replica.log
		return $OCF_ERR_GENERIC
	else
		search_uname=$OCF_RESKEY_CRM_meta_notify_master_uname
	fi

	if ( ! mysql_status ); then
		return $OCF_NOT_RUNNING
fi
	if [ $# != 1 ] && [ "$OCF_RESKEY_CRM_meta_notify_demote_uname" != "$HOSTNAME " ]; then
		return $OCF_ERR_GENERIC
	fi
	if is_slave 1; then
		return $OCF_SUCCESS
	else
		if [ -z "$search_uname" ]; then	return $OCF_ERR_GENERIC; fi
		master_host=$(grep $OCF_RESKEY_CRM_meta_notify_master_uname /etc/hosts|awk '{print $1;exit}')
		if [ -z "$master_host" ]; then
			ocf_log err "Unable to get IP address of host $OCF_RESKEY_CRM_meta_notify_master_uname"
	       	return $OCF_ERR_GENERIC;
		fi
		master_info=($(mysql \
			--password=$OCF_RESKEY_replication_passwd \
       		--user=$OCF_RESKEY_replication_user \
       		-h $master_host \
       		-O connect_timeout=1 \
	       	-e 'SHOW MASTER STATUS\G'|awk '/File/||/Position/{print $2}'))
		if [ -z "${master_info[0]}" ] || [ -z "${master_info[1]}" ]; then
			ocf_log err "Empty master file or master position"
	       	return $OCF_ERR_GENERIC;
		fi
		mysql --socket=$OCF_RESKEY_socket -O connect_timeout=1 -e 'STOP SLAVE';
		mysql --socket=$OCF_RESKEY_socket -O connect_timeout=1 \
			-e "CHANGE MASTER TO MASTER_HOST='$master_host', \
				MASTER_USER='$OCF_RESKEY_replication_user', \
				MASTER_PASSWORD='$OCF_RESKEY_replication_passwd', \
				MASTER_PORT=3306, \
				MASTER_LOG_FILE='${master_info[0]}', \
				MASTER_LOG_POS=${master_info[1]}, \
				MASTER_CONNECT_RETRY=4"
		mysql --socket=$OCF_RESKEY_socket -O connect_timeout=1 -e 'START SLAVE';
		if [ $? == $OCF_ERR_GENERIC ]; then
			return $OCF_ERR_GENERIC
		fi
	fi
	if is_slave 1; then
		return $OCF_SUCCESS
	else
		return $OCF_ERR_GENERIC
	fi
}

mysql_notify() {
	if [ "$OCF_RESKEY_CRM_meta_notify_type" != 'post' ]; then
		return $OCF_SUCCESS
	fi
	case "$OCF_RESKEY_CRM_meta_notify_operation" in
		'promote')
			if [ "$OCF_RESKEY_CRM_meta_notify_promote_uname" != "$HOSTNAME " ] &&
 				! is_slave 1; then
				mysql_demote 1
			fi
		;;
		'demote')
			if [ "$OCF_RESKEY_CRM_meta_notify_promote_uname" == "$HOSTNAME " ] &&
				! is_slave 1; then
				mysql_demote 1
			fi
		;;
		*) return $OCF_SUCCESS ;;
	esac

}

# What kind of method was invoked?
case "$1" in
  start)	mysql_start;;
  stop)		mysql_stop;;
  status)	mysql_status;;
  promote)	mysql_promote;;
  demote)	mysql_demote;;
  monitor)	mysql_monitor;;
  notify)	mysql_notify;;
  meta-data) meta_data;;
  validate-all)	mysql_validate;;
  usage|help) usage; exit $OCF_SUCCESS;;
 *)	usage; exit $OCF_ERR_UNIMPLEMENTED;;
esac
