#!/bin/bash
#
# chkconfig: 345 23 77
# description: Starts and stops fence domain
#
#	       
### BEGIN INIT INFO
# Provides: 
### END INIT INFO

. /etc/init.d/functions
[ -f /etc/sysconfig/cluster ] && . /etc/sysconfig/cluster

LOCK_FILE="/var/lock/subsys/fenced"

# FENCED_START_TIMEOUT -- amount of time to wait for starting fenced
#     before giving up.  If FENCED_START_TIMEOUT is positive, then we will
#     wait FENCED_START_TIMEOUT seconds before giving up and failing when
#     fenced does not start.  If FENCED_START_TIMEOUT is zero, then
#     wait indefinately for fenced to start.
FENCED_START_TIMEOUT=120

start()
{
	echo -n "Starting fence domain:"

	if ! [ -e /proc/cluster/status ]
	then
	  	failure "cman has not been properly started."
		echo
		return 0
	fi

	# If gulm is in ccs, don't start fenced
	if ! [ -r /etc/cluster/cluster.conf ]
	then
		failure "/etc/cluster/cluster.conf not readable."
		echo
		return 1
	elif grep -qE "<[[:space:]]*gulm([[:space:]]|[>]|$)" \
		/etc/cluster/cluster.conf
	then
		warning "Skipping because of <gulm> section detected in " \
			"/etc/cluster/cluster.conf"
		echo
		exit 0
	fi

	rtrn=1

	fence_tool -t $FENCED_START_TIMEOUT join -w > /dev/null 2>&1
	rtrn=$?
	
	if [ $rtrn -eq 0 ]
	then
		#> # make sure that the fence domain is up and running
		#> until grep "^Fence Domain:" /proc/cluster/services | grep -q " run "
		#> do
		#> 	sleep 1;
		#> done

		success "startup"
		echo
	else
		failure "startup"
		echo
	fi
		
	# need the extra echo to properlly terminate the line
	return $rtrn
}

stop()
{
	echo -n "Stopping fence domain:"

	if pidof fenced &> /dev/null
	then
		fence_tool leave > /dev/null 2>&1
		rtrn=$?
	
		if [ $rtrn -eq 0 ]
		then
			success "shutdown"
			echo
		else
			failure "shutdown"
			echo
		fi
	else
		rtrn=0		
		success "shutdown"
		echo
	fi
		
	# need the extra echo to properlly terminate the line
	return $rtrn
}

rtrn=1

# See how we were called.
case "$1" in
  start)
	start
	rtrn=$?
	[ $rtrn = 0 ] && touch $LOCK_FILE
	;;

  stop)
	stop
	rtrn=$?
	[ $rtrn = 0 ] && rm -f $LOCK_FILE
	;;

  restart)
	$0 stop
	$0 start 
	rtrn=$?
	;;

  status)
	status fenced
	rtrn=1
	;;

  *)
	echo $"Usage: $0 {start|stop|restart|status}"
	;;
esac

exit $rtrn
