diff -up --recursive 2.6.8.1.csnap.clean/drivers/md/Kconfig 2.6.8.1.csnap/drivers/md/Kconfig
--- 2.6.8.1.csnap.clean/drivers/md/Kconfig	2004-08-14 10:54:50.000000000 +0000
+++ 2.6.8.1.csnap/drivers/md/Kconfig	2004-10-04 20:39:41.000000000 +0000
@@ -200,5 +200,15 @@ config DM_ZERO
 	  A target that discards writes, and returns all zeroes for
 	  reads.  Useful in some recovery situations.
 
+config DM_CSNAP
+	tristate "Cluster snapshot target support"
+	depends on BLK_DEV_DM && EXPERIMENTAL
+	---help---
+	  This device-mapper target allows you to create a virtual device
+	  that can take snapshots of an underlying device.  This device
+	  can be accessed simultaneously by multiple nodes of a cluster.
+
+	  If unsure, say N.
+
 endmenu
 
diff -up --recursive 2.6.8.1.csnap.clean/drivers/md/Makefile 2.6.8.1.csnap/drivers/md/Makefile
--- 2.6.8.1.csnap.clean/drivers/md/Makefile	2004-08-14 10:55:33.000000000 +0000
+++ 2.6.8.1.csnap/drivers/md/Makefile	2004-10-04 20:41:51.000000000 +0000
@@ -29,6 +29,7 @@ obj-$(CONFIG_DM_CRYPT)		+= dm-crypt.o
 obj-$(CONFIG_DM_SNAPSHOT)	+= dm-snapshot.o
 obj-$(CONFIG_DM_MIRROR)		+= dm-mirror.o
 obj-$(CONFIG_DM_ZERO)		+= dm-zero.o
+obj-$(CONFIG_DM_CSNAP)		+= dm-csnap.o
 
 quiet_cmd_unroll = UNROLL  $@
       cmd_unroll = $(PERL) $(srctree)/$(src)/unroll.pl $(UNROLL) \
diff -up --recursive 2.6.8.1.csnap.clean/fs/super.c 2.6.8.1.csnap/fs/super.c
--- 2.6.8.1.csnap.clean/fs/super.c	2004-08-14 10:55:22.000000000 +0000
+++ 2.6.8.1.csnap/fs/super.c	2004-10-04 20:39:41.000000000 +0000
@@ -51,7 +51,7 @@ spinlock_t sb_lock = SPIN_LOCK_UNLOCKED;
  *	Allocates and initializes a new &struct super_block.  alloc_super()
  *	returns a pointer new superblock or %NULL if allocation had failed.
  */
-static struct super_block *alloc_super(void)
+struct super_block *alloc_super(void)
 {
 	struct super_block *s = kmalloc(sizeof(struct super_block),  GFP_USER);
 	static struct super_operations default_op;
@@ -87,6 +87,8 @@ out:
 	return s;
 }
 
+EXPORT_SYMBOL(alloc_super);
+
 /**
  *	destroy_super	-	frees a superblock
  *	@s: superblock to free
diff -up --recursive 2.6.8.1.csnap.clean/include/linux/fs.h 2.6.8.1.csnap/include/linux/fs.h
--- 2.6.8.1.csnap.clean/include/linux/fs.h	2004-08-14 10:55:09.000000000 +0000
+++ 2.6.8.1.csnap/include/linux/fs.h	2004-10-04 20:39:41.000000000 +0000
@@ -1120,6 +1120,7 @@ void generic_shutdown_super(struct super
 void kill_block_super(struct super_block *sb);
 void kill_anon_super(struct super_block *sb);
 void kill_litter_super(struct super_block *sb);
+struct super_block *alloc_super(void);
 void deactivate_super(struct super_block *sb);
 int set_anon_super(struct super_block *s, void *data);
 struct super_block *sget(struct file_system_type *type,
